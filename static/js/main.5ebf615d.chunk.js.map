{"version":3,"sources":["components/create.js","components/appMeta.js","assets/clock-solid.svg","components/listing.js","components/timestamp.js","components/App.js","reportWebVitals.js","index.js"],"names":["Create","props","state","title","duration","handleSubmit","bind","event","newState","target","name","value","this","setState","preventDefault","onsubmit","className","onChange","e","handleChange","onSubmit","type","id","placeholder","required","React","Component","AppMeta","appinfo","totalTodos","style","visibility","backgroundColor","onClick","filter","allTodos","length","inProgress","completedTodos","Listings","todoinfo","map","todo","src","Clock","alt","handleCheckBox","checked","completed","clearlist","buildListingHTML","Timestamp","date","Date","getDate","getMonth","getFullYear","App","publishedTodos","updateAllTodos","clearList","filterPublishedTodos","todos","localStorage","getItem","JSON","parse","newTodo","updatedTodoList","setItem","stringify","currentTodos","clear","inProgressTodos","console","log","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ebf615d.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css'\r\n\r\nclass Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            duration: \"\"\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const newState = {};\r\n        newState[event.target.name] = event.target.value;\r\n        this.setState(newState)\r\n    }\r\n\r\n    // passes new todo information to state in App.js\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.onsubmit(this.state.title, this.state.duration);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"create-form\" onChange={(e) => this.handleChange(e)} onSubmit={(e) => this.handleSubmit(e)}>\r\n                <input type=\"text\" id=\"title\" placeholder=\"What do you need to do?\" name=\"title\" required />\r\n                    <select name=\"duration\" id=\"duration\" required>\r\n                        <option value=\"\">How long will it take?</option>\r\n                        <option value=\"15 minutes\">15 minutes</option>\r\n                        <option value=\"30 minutes\">30 minutes</option>\r\n                        <option value=\"45 minutes\">45 minutes</option>\r\n                        <option value=\"1 hour\">1 hour</option>\r\n                        <option value=\"1 hour 15 minutes\">1 hour 15 minutes</option>\r\n                        <option value=\"1 hour 30 minutes\">1 hour 30 minutes</option>\r\n                        <option value=\"1 hour 45 minutes\">1 hour 45 minutes</option>\r\n                        <option value=\"2 hours\">2 hours</option>\r\n                    </select>\r\n                <button type=\"submit\" className=\"button-add\">Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Create","import React from 'react'\r\n\r\nconst AppMeta = (props) => {\r\n    return (\r\n        <div>\r\n            <h5>All Tasks <span className=\"info-icon\">( {props.appinfo.totalTodos} )</span></h5>\r\n            <div className=\"todo-app-meta\">\r\n                <button style={props.appinfo.visibility === \"all\" ? {backgroundColor: \"#50E3A4\"} : {backgroundColor: \"\"}} id=\"all\" onClick={(e) => props.filter(e.target.id)}>All <span className=\"info-icon\">{props.appinfo.allTodos.length}</span></button>\r\n                <button style={props.appinfo.visibility === \"in_progress\" ? {backgroundColor: \"#50E3A4\"} : {backgroundColor: \"\"}} id=\"inprogress\" onClick={(e) => props.filter(e.target.id)}>In Progress <span className=\"info-icon\">{props.appinfo.inProgress}</span></button>\r\n                <button style={props.appinfo.visibility === \"completed\" ? {backgroundColor: \"#50E3A4\"} : {backgroundColor: \"\"}} id=\"completed\" onClick={(e) => props.filter(e.target.id)}>Completed <span className=\"info-icon\">{props.appinfo.completedTodos}</span></button>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\nexport default AppMeta","export default __webpack_public_path__ + \"static/media/clock-solid.e9b1650f.svg\";","import React from 'react'\r\nimport AppMeta from './appMeta'\r\nimport Clock from '../assets/clock-solid.svg'\r\n\r\n\r\nclass Listings extends React.Component {\r\n\r\n    buildListingHTML() {\r\n            return  this.props.todoinfo.map((todo) => (\r\n                <div className=\"todo-container\" key={todo.id}>\r\n                    <div>\r\n                        <h5>{todo.title}</h5>\r\n                        <div className=\"todo-info\">\r\n                            <img className=\"meta-icon\" src={Clock} alt=\"clock icon\" />\r\n                            {todo.duration}\r\n                        </div>\r\n                    </div>\r\n                    <input id={todo.id} onClick={(e) => this.props.handleCheckBox(e)} type=\"checkbox\" name=\"completed\" checked={todo.completed ? \"checked\" : \"\"}/>\r\n                </div>\r\n            ))\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppMeta appinfo={this.props.appinfo} clearlist={this.props.clearlist} filter={this.props.filter}/>\r\n                {this.buildListingHTML()}\r\n                <button className=\"button-clear\" onClick={this.props.clearlist}>Clear List</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Listings","import React from 'react'\r\n\r\nclass Timestamp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"timestamp\">\r\n                <p>{this.state.date.getDate()} / {this.state.date.getMonth()+1} / {this.state.date.getFullYear()}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Timestamp","import React from 'react'\nimport Container from 'react-bootstrap/Container'\n// import CSS files\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../App.css';\nimport Create from './create'\nimport Listings from './listing'\nimport Timestamp from './timestamp'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTodos: [],\n      publishedTodos: [],\n      completedTodos: 0,\n      inProgress: 0,\n      totalTodos: 0,\n      visibility: \"all\"\n    }\n    this.updateAllTodos = this.updateAllTodos.bind(this);\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.clearList = this.clearList.bind(this);\n    this.filterPublishedTodos = this.filterPublishedTodos.bind(this)\n  }\n\n  componentDidMount() {\n    const todos = localStorage.getItem(\"todo\");\n    this.setState((state) => ({\n      allTodos: JSON.parse(todos) || [],\n      publishedTodos: state.allTodos\n    }))\n  }\n\n  updateAllTodos(title, duration) {\n    let id = this.state.allTodos.length;\n    let completed = false;\n    const newTodo = {title, duration, id, completed};\n    let updatedTodoList = [...this.state.allTodos, newTodo];\n    this.setState((state) => ({\n      allTodos: updatedTodoList,\n      publishedTodos: updatedTodoList,\n      inProgress: state.inProgress + 1,\n      totalTodos: state.totalTodos + 1,\n      visibility: \"all\"\n    }), () => localStorage.setItem(\"todo\", JSON.stringify(this.state.allTodos)))\n  }\n\n  handleCheckBox(todo) {\n    const currentTodos = this.state.allTodos;\n    currentTodos[todo.target.id].completed = todo.target.checked;\n    if(todo.target.checked) {\n      this.setState((state) => ({\n        allTodos: currentTodos,\n        completedTodos: state.completedTodos + 1,\n        inProgress: state.inProgress -1\n      }))\n    } else {\n      this.setState((state) => ({\n        allTodos: currentTodos,\n        completedTodos: state.completedTodos - 1,\n        inProgress: state.inProgress + 1\n      }))\n    }\n  }\n\n  clearList() {\n    localStorage.clear()\n    this.setState({\n      allTodos: [],\n      publishedTodos: [],\n      completedTodos: 0,\n      inProgress: 0,\n      totalTodos: 0,\n      visibility: \"all\"\n    })\n  }\n\n  filterPublishedTodos(filter) {\n    if(filter === \"completed\") {\n        let completedTodos = this.state.allTodos.filter((todo) => todo.completed === true);\n        this.setState({\n          publishedTodos: completedTodos,\n          visibility: \"completed\"\n        })\n    } else if (filter === \"inprogress\") {\n      let inProgressTodos =  this.state.allTodos.filter((todo) => todo.completed === false)\n      this.setState({\n        publishedTodos: inProgressTodos,\n        visibility: \"in_progress\"\n      })\n    } else {\n      this.setState((state) => ({\n        publishedTodos: state.allTodos,\n        visibility: \"all\"\n      }))\n    }\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <Container>\n        <div className=\"App\">\n          <Timestamp />\n          <Create onsubmit={this.updateAllTodos} />\n          <Listings todoinfo={this.state.publishedTodos} handleCheckBox={this.handleCheckBox} appinfo={this.state} clearlist={this.clearList} filter={this.filterPublishedTodos}/>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
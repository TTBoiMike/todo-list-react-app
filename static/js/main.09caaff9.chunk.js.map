{"version":3,"sources":["components/create.js","components/appMeta.js","assets/clock-solid.svg","components/listing.js","components/timestamp.js","components/App.js","reportWebVitals.js","index.js"],"names":["Create","props","state","title","duration","handleSubmit","bind","event","newState","target","name","value","this","setState","preventDefault","onsubmit","currentTarget","className","onChange","e","handleChange","onSubmit","type","id","placeholder","required","onClick","clearlist","React","Component","AppMeta","style","appinfo","visibility","backgroundColor","filter","allTodos","length","inProgress","completedTodos","Listings","todoinfo","map","todo","src","Clock","alt","handleCheckBox","checked","completed","buildListingHTML","Timestamp","date","Date","getDate","getMonth","getFullYear","App","updateAllTodos","newTodo","updatedTodoList","publishedTodos","totalTodos","localStorage","setItem","JSON","stringify","currentTodos","filterPublishedTodos","clearList","clear","inProgressTodos","todos","getItem","parse","console","log","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09caaff9.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css'\r\n\r\nclass Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            duration: \"\"\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const newState = {};\r\n        newState[event.target.name] = event.target.value;\r\n        this.setState(newState)\r\n    }\r\n\r\n    // passes new todo information to state in App.js\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.onsubmit(this.state.title, this.state.duration);\r\n        event.currentTarget.title.value = \"\"\r\n        event.currentTarget.duration.value = \"\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"create-form\"onChange={(e) => this.handleChange(e)} onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <input type=\"text\" id=\"title\" placeholder=\"Add a task\" name=\"title\" required />\r\n                        <select name=\"duration\" id=\"duration\" required>\r\n                            <option value=\"\">How long will it take?</option>\r\n                            <option value=\"15 minutes\">15 minutes</option>\r\n                            <option value=\"30 minutes\">30 minutes</option>\r\n                            <option value=\"45 minutes\">45 minutes</option>\r\n                            <option value=\"1 hour\">1 hour</option>\r\n                            <option value=\"1 hour 15 minutes\">1 hour 15 minutes</option>\r\n                            <option value=\"1 hour 30 minutes\">1 hour 30 minutes</option>\r\n                            <option value=\"1 hour 45 minutes\">1 hour 45 minutes</option>\r\n                            <option value=\"2 hours\">2 hours</option>\r\n                        </select>\r\n                    <button type=\"submit\" className=\"button-add\">Add</button>\r\n                </form>\r\n                <button className=\"button-clear\" onClick={this.props.clearlist}>Clear List</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Create","import React from 'react'\r\n\r\nconst AppMeta = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"todo-app-meta\">\r\n                <button style={props.appinfo.visibility === \"all\" ? {backgroundColor: \"#50E3A4\"} : {backgroundColor: \"\"}} id=\"all\" onClick={(e) => props.filter(e.target.id)}>All <span className=\"info-icon\">{props.appinfo.allTodos.length}</span></button>\r\n                <button style={props.appinfo.visibility === \"inprogress\" ? {backgroundColor: \"#50E3A4\"} : {backgroundColor: \"\"}} id=\"inprogress\" onClick={(e) => props.filter(e.target.id)}>In Progress <span className=\"info-icon\">{props.appinfo.inProgress}</span></button>\r\n                <button style={props.appinfo.visibility === \"completed\" ? {backgroundColor: \"#50E3A4\"} : {backgroundColor: \"\"}} id=\"completed\" onClick={(e) => props.filter(e.target.id)}>Completed <span className=\"info-icon\">{props.appinfo.completedTodos}</span></button>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\nexport default AppMeta","export default __webpack_public_path__ + \"static/media/clock-solid.e9b1650f.svg\";","import React from 'react'\r\nimport AppMeta from './appMeta'\r\nimport Clock from '../assets/clock-solid.svg'\r\n\r\n\r\nclass Listings extends React.Component {\r\n\r\n    buildListingHTML() {\r\n        return  this.props.todoinfo.map((todo) => (\r\n            <div className=\"todo-container\" key={todo.id}>\r\n                <div>\r\n                    <p>{todo.title}</p>\r\n                    <div className=\"todo-info\">\r\n                        <img className=\"meta-icon\" src={Clock} alt=\"clock icon\" />\r\n                        {todo.duration}\r\n                    </div>\r\n                </div>\r\n                <input id={todo.id} onClick={(e) => this.props.handleCheckBox(e)} type=\"checkbox\" name=\"completed\" checked={todo.completed ? \"checked\" : \"\"}/>\r\n            </div>\r\n            ))\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppMeta appinfo={this.props.appinfo} clearlist={this.props.clearlist} filter={this.props.filter}/>\r\n                {this.buildListingHTML()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Listings","import React from 'react'\r\n\r\nclass Timestamp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"timestamp\">\r\n                <h4>Todo List - {this.state.date.getDate()} / {this.state.date.getMonth()+1} / {this.state.date.getFullYear()}</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Timestamp","import React from 'react'\nimport Container from 'react-bootstrap/Container'\n// import CSS files\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../App.css';\nimport Create from './create'\nimport Listings from './listing'\nimport Timestamp from './timestamp'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTodos: [],\n      publishedTodos: [],\n      completedTodos: 0,\n      inProgress: 0,\n      totalTodos: 0,\n      visibility: \"all\"\n    }\n  }\n\n  componentDidMount() {\n    const todos = localStorage.getItem(\"todo\");\n    this.setState((state) => ({\n      allTodos: JSON.parse(todos) || [],\n      publishedTodos: state.allTodos\n    }))\n    this.filterPublishedTodos(\"all\")\n  }\n\n  updateAllTodos = (title, duration) => {\n    let id = this.state.allTodos.length;\n    let completed = false;\n    const newTodo = {title, duration, id, completed};\n    let updatedTodoList = [...this.state.allTodos, newTodo];\n    this.setState((state) => ({\n      allTodos: updatedTodoList,\n      publishedTodos: updatedTodoList,\n      inProgress: state.inProgress + 1,\n      totalTodos: state.totalTodos + 1,\n      visibility: \"all\"\n    }), () => localStorage.setItem(\"todo\", JSON.stringify(this.state.allTodos)))\n  }\n\n  handleCheckBox = (todo) => {\n    const currentTodos = this.state.allTodos;\n    currentTodos[todo.target.id].completed = todo.target.checked;\n    if(todo.target.checked) {\n      this.setState((state) => ({\n        allTodos: currentTodos,\n        completedTodos: state.completedTodos + 1,\n        inProgress: state.inProgress !== 0 ? state.inProgress -1 : state.inProgress\n      }))\n    } else {\n      this.setState((state) => ({\n        allTodos: currentTodos,\n        completedTodos: state.completedTodos - 1,\n        inProgress: state.inProgress + 1\n      }))\n    }\n    this.filterPublishedTodos(this.state.visibility)\n  }\n\n  clearList = () => {\n    localStorage.clear()\n    this.setState({\n      allTodos: [],\n      publishedTodos: [],\n      completedTodos: 0,\n      inProgress: 0,\n      totalTodos: 0,\n      visibility: \"all\"\n    })\n  }\n\n  filterPublishedTodos = (filter) => {\n    if(filter === \"completed\") {\n        let completedTodos = this.state.allTodos.filter((todo) => todo.completed === true);\n        this.setState({\n          publishedTodos: completedTodos,\n          visibility: \"completed\"\n        })\n    } else if (filter === \"inprogress\") {\n      let inProgressTodos =  this.state.allTodos.filter((todo) => todo.completed === false)\n      this.setState({\n        publishedTodos: inProgressTodos,\n        visibility: \"inprogress\"\n      })\n    } else {\n      this.setState((state) => ({\n        publishedTodos: state.allTodos,\n        visibility: \"all\"\n      }))\n    }\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <Container>\n        <div className=\"App\">\n          <Timestamp />\n          <Create onsubmit={this.updateAllTodos} clearlist={this.clearList}/>\n          <Listings todoinfo={this.state.publishedTodos} handleCheckBox={this.handleCheckBox} appinfo={this.state} clearlist={this.clearList} filter={this.filterPublishedTodos}/>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
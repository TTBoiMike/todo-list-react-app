{"version":3,"sources":["components/create.js","components/appMeta.js","assets/clock-solid.svg","components/listing.js","components/timestamp.js","apiClient.js","components/App.js","reportWebVitals.js","index.js"],"names":["Create","props","handleSubmit","event","preventDefault","onsubmit","state","currentTarget","description","value","time","newState","target","name","this","setState","className","onChange","e","handleChange","onSubmit","type","id","placeholder","required","onClick","clearlist","React","Component","AppMeta","style","appinfo","visibility","backgroundColor","filter","allTodos","length","inProgress","completedTodos","Listings","todoinfo","map","todo","src","Clock","alt","handleCheckBox","defaultChecked","completed","buildListingHTML","Timestamp","date","Date","getDate","getMonth","getFullYear","url","apiClient","clientRequest","method","data","axios","catch","err","alert","console","log","getTodos","addTodo","updateTodo","deleteTodos","App","then","todosToShow","inprogress","publishedTodos","totalTodos","addNewTodo","a","find","clearList","filterPublishedTodos","inProgressTodos","ApiClient","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4477cc58.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css'\r\n\r\nclass Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            description: \"\",\r\n            time: \"\"\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const newState = {};\r\n        newState[event.target.name] = event.target.value;\r\n        this.setState(newState)\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onsubmit(this.state);\r\n        event.currentTarget.description.value = \"\"\r\n        event.currentTarget.time.value = \"\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"create-form\"onChange={(e) => this.handleChange(e)} onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <input type=\"text\" id=\"description\" placeholder=\"Add a task\" name=\"description\" required />\r\n                        <select name=\"time\" id=\"time\" required>\r\n                            <option value=\"\">How long will it take?</option>\r\n                            <option value=\"15 minutes\">15 minutes</option>\r\n                            <option value=\"30 minutes\">30 minutes</option>\r\n                            <option value=\"45 minutes\">45 minutes</option>\r\n                            <option value=\"1 hour\">1 hour</option>\r\n                            <option value=\"1 hour 15 minutes\">1 hour 15 minutes</option>\r\n                            <option value=\"1 hour 30 minutes\">1 hour 30 minutes</option>\r\n                            <option value=\"1 hour 45 minutes\">1 hour 45 minutes</option>\r\n                            <option value=\"2 hours\">2 hours</option>\r\n                        </select>\r\n                    <button type=\"submit\" className=\"button-add\">Add</button>\r\n                </form>\r\n                <button className=\"button-clear\" onClick={this.props.clearlist}>Clear List</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Create","import React from 'react'\r\n\r\nconst AppMeta = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"todo-app-meta\">\r\n                <button style={props.appinfo.visibility === \"all\" ? {backgroundColor: \"#EC9706\"} : {backgroundColor: \"\"}} id=\"all\" onClick={(e) => props.filter(e.target.id)}>All <span className=\"info-icon\">{props.appinfo.allTodos.length}</span></button>\r\n                <button style={props.appinfo.visibility === \"inprogress\" ? {backgroundColor: \"#EC9706\"} : {backgroundColor: \"\"}} id=\"inprogress\" onClick={(e) => props.filter(e.target.id)}>In Progress <span className=\"info-icon\">{props.appinfo.inProgress}</span></button>\r\n                <button style={props.appinfo.visibility === \"completed\" ? {backgroundColor: \"#EC9706\"} : {backgroundColor: \"\"}} id=\"completed\" onClick={(e) => props.filter(e.target.id)}>Completed <span className=\"info-icon\">{props.appinfo.completedTodos}</span></button>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\nexport default AppMeta","export default __webpack_public_path__ + \"static/media/clock-solid.e9b1650f.svg\";","import React from 'react'\r\nimport AppMeta from './appMeta'\r\nimport Clock from '../assets/clock-solid.svg'\r\n\r\n\r\nclass Listings extends React.Component {\r\n\r\n    buildListingHTML() {\r\n        return  this.props.todoinfo.map((todo) => (\r\n            <div className=\"todo-container\" key={todo.id}>\r\n                <div>\r\n                    <p>{todo.description}</p>\r\n                    <div className=\"todo-info\">\r\n                        <img className=\"meta-icon\" src={Clock} alt=\"clock icon\" />\r\n                        {todo.time}\r\n                    </div>\r\n                </div>\r\n                <input id={todo.id} onClick={(e) => this.props.handleCheckBox(e)} type=\"checkbox\" name=\"completed\" defaultChecked={todo.completed ? \"checked\" : \"\"}/>\r\n            </div>\r\n            ))\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppMeta appinfo={this.props.appinfo} clearlist={this.props.clearlist} filter={this.props.filter}/>\r\n                {this.buildListingHTML()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Listings","import React from 'react'\r\n\r\nclass Timestamp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"timestamp\">\r\n                <h4>Todo List - {this.state.date.getDate()} / {this.state.date.getMonth()+1} / {this.state.date.getFullYear()}</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Timestamp","import axios from 'axios'\r\nconst url = \"https://todo-listprojectapi.herokuapp.com/\"\r\n\r\nclass apiClient {\r\n\r\n    clientRequest = (method, url, data) => {\r\n        return axios({\r\n            method,\r\n            url,\r\n            data\r\n        })\r\n        .catch((err) => {\r\n            alert(err)\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    // get all todos from database\r\n    getTodos = () => {\r\n        return this.clientRequest('get', url)\r\n    }\r\n    // add new todo to database\r\n    addTodo = (data) => {\r\n        return this.clientRequest('post', url, data)\r\n    }\r\n    // update a todo as completed/not comleted\r\n    updateTodo = (id, data) => {\r\n        return this.clientRequest('put', `${url}${id}`, data)\r\n    }\r\n    // delete all todos in database\r\n    deleteTodos = () => {\r\n        return this.clientRequest('delete', url)\r\n    }\r\n}\r\n\r\nexport default apiClient","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../App.css';\nimport Create from './create'\nimport Listings from './listing'\nimport Timestamp from './timestamp'\nimport ApiClient from '../apiClient'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTodos: [],\n      publishedTodos: [],\n      completedTodos: 0,\n      inProgress: 0,\n      totalTodos: 0,\n      visibility: \"all\"\n    }\n    this.apiClient = new ApiClient()\n  }\n\n  getTodos = () => {\n    this.apiClient.getTodos()\n      .then(({ data }) => {\n        let inprogress = 0\n        let completed = 0\n        data.map((todo) => {\n          if (todo.completed === 0) {\n            inprogress++\n            return todo.completed = false\n          } else {\n            completed++\n            return todo.completed = true\n          }\n        })\n\n        let todosToShow\n        if(this.state.visibility === \"all\") {\n          todosToShow = data;\n        } else if (this.state.visibility === \"completed\") {\n          todosToShow = this.state.allTodos.filter(todo => todo.completed === true)\n        } else {\n          todosToShow = this.state.allTodos.filter(todo => todo.completed === !true)\n        }\n        this.setState({\n          allTodos: data,\n          publishedTodos: todosToShow,\n          completedTodos: completed,\n          inProgress: inprogress,\n          totalTodos: data.length\n        })\n      })\n  }\n\n  // fetch todos when page loads\n  componentDidMount() {\n    this.getTodos()\n  }\n\n  //add a new todo to database\n  addNewTodo = async (todo) => {\n    console.log(\"new todo\", todo)\n    await this.apiClient.addTodo(todo)\n    this.getTodos()\n  }\n\n  handleCheckBox = async (e) => {\n    let todo = this.state.allTodos.find(todo => todo.id == e.currentTarget.id)\n    todo.completed = !todo.completed\n    console.log(todo)\n    await this.apiClient.updateTodo(todo.id, todo)\n    this.getTodos()\n  }\n\n  clearList = async () => {\n    await this.apiClient.deleteTodos()\n    this.getTodos()\n  }\n\n  filterPublishedTodos = (filter) => {\n    if (filter === \"completed\") {\n      let completedTodos = this.state.allTodos.filter((todo) => todo.completed === true);\n      this.setState({\n        publishedTodos: completedTodos,\n        visibility: \"completed\"\n      })\n    } else if (filter === \"inprogress\") {\n      let inProgressTodos = this.state.allTodos.filter((todo) => todo.completed === false)\n      this.setState({\n        publishedTodos: inProgressTodos,\n        visibility: \"inprogress\"\n      })\n    } else {\n      this.setState((state) => ({\n        publishedTodos: state.allTodos,\n        visibility: \"all\"\n      }))\n    }\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <Container>\n        <div className=\"App\">\n          <Timestamp />\n          <Create onsubmit={this.addNewTodo} clearlist={this.clearList} />\n          <Listings todoinfo={this.state.publishedTodos} handleCheckBox={this.handleCheckBox} appinfo={this.state} clearlist={this.clearList} filter={this.filterPublishedTodos} />\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}